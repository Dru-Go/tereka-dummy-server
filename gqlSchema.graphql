type Query {
  hello: String
  all_Audios: [Audio]
  play_Audio(id: String): Audio
  all_users: [User]
  fav_Audios(uid: String): [Audio]
  all_Playlists(uid: String): [Playlist]
  playlist_Audios(uid: String, pid: String): [Audio]
  details_Narrator(id: String): Details
  search_Audios(title: String): [Audio]
  suggestions: [Suggestion]
  search_Suggestion(title: String): [Suggestion]

  # Recent Query (optional)
  mostRecentPlay(uid: String): Audio
  recentPlays(uid: String): [Audio]
}

type Mutation {
  signIn(email: String, password: String): Auth
  signUp(name: String, email: String, password: String, theme: String): Auth
  AddToFavs(uid: String, id: String): [Audio]
  suggest(
    title: String
    author: String
    category: String
    discription: String
  ): Suggestion
  remove_fav_Audio(id: String): [Audio]
  AddToPlaylist(uid: String, pid: String, audioID: String): [Audio]
  NewPlaylist(uid: String, name: String): Playlist
  RemovePlaylist(uid: String, id: String): Playlist
  Like(uid: String, audioId: String): Audio
  Follow(uid: String, follow: String): User

  # Recent Mutation (Optional)
  AddToRecent(uid: String, audioid: String, pointer: Int): Audio
}

# Must do
type Details {
  User: User
  Audios: [Audio]
  Followers: Int
}

type Auth {
  token: String
  user: User
}

type User {
  Id: ID!
  Name: String
  Type: UserType
  Email: String!
  ImageURL: String
  Password: String!
  Theme: String
  Likes: Int
  Following: [User]
  Playlist: [Playlist]
  Favorites: [Audio]
  CreatedAt: String!
}

# on every add you should append the audio id to the Audio list attribute if u can
# if u have a better idea let me know
type Recent_Plays {
  uid: String
  Audios: [Audio] # Here i need this array to show all the recently played audios
  Pointer: Int # Here i need this pointer let me know the most recent audios seek pointer
  PlayedAt: String
}

type Audio {
  Id: ID!
  Title: String!
  ImageURL: String
  Author: String!
  Narrator: String!
  Type: String
  Likes: Int
  Url: String!
  Published: Boolean
  CreatedAt: String!
}

type Suggestion {
  Id: ID
  Title: String
  Likes: Int
  Author: String
  Category: String
  Discription: String
  Status: STATUS
  CreatedAt: String
}

enum STATUS {
  CONFIRMED
  PENDING
  AVAILABLE
}

type UserType {
  Type: String!
  Following: [User]
}

type Playlist {
  Id: ID!
  Name: String!
  Audios: [Audio]
}
